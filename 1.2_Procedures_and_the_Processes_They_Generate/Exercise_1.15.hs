-- (define (cube x) (* x x x))
cube x = x * x * x

-- (define (p x) (- (* 3 x) (* 4 (cube x))))
p x = (3 * x) - (4 * cube x)

-- (define (sine angle)
--    (if (not (> (abs angle) 0.1))
--        angle
--        (p (sine (/ angle 3.0)))))
sine angle = if not $ abs angle > 0.1 then angle
             else p $ sine (angle / 3.0)

-- a.  How many times is the procedure p applied when (sine 12.15) is evaluated?
-- sine 12.15
-- p $ sine (12.15 / 3.0)
-- p $ p $ sine (4.05 / 3.0)
-- p $ p $ p $ sine (1.35 / 3.0)
-- p $ p $ p $ p $ sine (0.45 / 3.0)
-- p $ p $ p $ p $ p $ sine (0.15 / 3.0)
-- p $ p $ p $ p $ p $ sine (0.05)
-- => 5 times
--
-- b.  What is the order of growth in space and number of steps (as a function of a) 
--     used by the process generated by the sine procedure when (sine a) is evaluated?

-- a / (3 ^ n) <= 0.1
-- a <= 0.1 * 3 ^ n
-- a / 0.1 <= 3 ^ n
-- log_3 (a / 0.1) <= n

main = do
  print $ sine 12.15

